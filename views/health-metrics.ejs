<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Health Metrics - Fit-With-AI</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="sidebar.css">
    <link rel="stylesheet" href="HealthMetrics.css">
    <style>
        :root {
            --primary-color: #ff6b6b;
            --secondary-color: #4ecdc4;
            --accent-color: #8a2be2;
            --success-color: #4ade80;
            --warning-color: #fbbf24;
            --danger-color: #ef4444;
            --dark-bg: #0a0a0a;
            --card-bg: #1a1a1a;
            --card-bg-hover: #262626;
            --text-primary: rgba(255, 255, 255, 0.95);
            --text-secondary: rgba(255, 255, 255, 0.7);
            --text-muted: rgba(255, 255, 255, 0.5);
            --border-color: rgba(255, 255, 255, 0.1);
            --gradient-primary: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 50%, #8a2be2 100%);
            --gradient-secondary: linear-gradient(135deg, #ff6b6b, #4ecdc4);
            --glass-bg: rgba(255, 255, 255, 0.05);
            --glass-border: rgba(255, 255, 255, 0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: var(--dark-bg);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
            position: relative;
        }

        /* Dynamic background particles */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .particle {
            position: absolute;
            background: rgba(255, 107, 107, 0.1);
            border-radius: 50%;
            animation: float 20s infinite linear;
        }

        .particle:nth-child(2n) {
            background: rgba(78, 205, 196, 0.1);
            animation-duration: 25s;
        }

        .particle:nth-child(3n) {
            background: rgba(138, 43, 226, 0.1);
            animation-duration: 30s;
        }

        @keyframes float {
            0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
        }

        .container {
            display: flex;
            min-height: 100vh;
            max-height: 100vh;
        }

        /* Enhanced Sidebar */
       /* Sidebar */
.sidebar {
    width: 250px;
    background-color: #111;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    padding: 1.5rem 0;
    height: 100vh;
    position: fixed;
    transition: all 0.3s ease;
    overflow-y: auto;
}

.sidebar-header {
    padding: 0 1.5rem 1.5rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: 1.5rem;
}

.sidebar-logo {
    font-size: 1.5rem;
    font-weight: 800;
    background: linear-gradient(90deg, #ff6b6b, #4ecdc4, #8a2be2);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: 2px;
    margin-bottom: 1rem;
}

.user-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.user-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #ff6b6b, #4ecdc4);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    color: white;
}

.user-details {
    flex: 1;
}

.user-name {
    font-weight: 600;
    font-size: 0.95rem;
}

.user-plan {
    font-size: 0.8rem;
    color: #4ecdc4;
}

.sidebar-menu {
    list-style: none;
}

.sidebar-menu li {
    margin-bottom: 0.5rem;
}

.sidebar-menu a {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1.5rem;
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
    transition: all 0.3s ease;
    border-left: 3px solid transparent;
}

.sidebar-menu a:hover,
.sidebar-menu a.active {
    background-color: rgba(255, 255, 255, 0.05);
    color: white;
}

.sidebar-menu a.active {
    border-left-color: #4ecdc4;
}

.sidebar-menu i {
    width: 20px;
    text-align: center;
}

.sidebar-footer {
    padding: 1.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 2rem;
}

.logout-btn {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
    transition: all 0.3s ease;
}

.logout-btn:hover {
    color: #ff6b6b;
}

        /* Enhanced Main Content */
        .main-content {
            flex: 1;
            margin-left: 260px;
            height: 100vh;
            overflow-y: auto;
            padding: 20px;
            background: linear-gradient(135deg, var(--dark-bg) 0%, #1a1a1a 100%);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            background: rgba(10, 10, 10, 0.95);
            z-index: 100;
            padding: 15px 0;
            backdrop-filter: blur(20px);
            border-radius: 15px;
        }

        .page-title {
            font-size: 28px;
            font-weight: 700;
            animation: slideInLeft 0.8s ease;
        }

        .page-title span {
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        @keyframes slideInLeft {
            from { transform: translateX(-50px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        .header-actions {
            display: flex;
            gap: 15px;
            animation: slideInRight 0.8s ease;
        }

        @keyframes slideInRight {
            from { transform: translateX(50px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background: var(--glass-bg);
            color: var(--text-primary);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 6px;
            font-weight: 500;
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            font-size: 14px;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn:hover {
            background: var(--gradient-secondary);
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(255, 107, 107, 0.3);
        }

        .btn.active {
            background: var(--gradient-primary);
            animation: buttonPulse 2s infinite;
        }

        @keyframes buttonPulse {
            0%, 100% { box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.7); }
            50% { box-shadow: 0 0 0 10px rgba(255, 107, 107, 0); }
        }

        /* Enhanced Health Score */
        .health-score {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 30px;
            background: var(--glass-bg);
            border-radius: 20px;
            text-align: center;
            margin-bottom: 20px;
            border: 1px solid var(--glass-border);
            backdrop-filter: blur(20px);
            position: relative;
            overflow: hidden;
            animation: fadeInUp 1s ease;
        }

        @keyframes fadeInUp {
            from { transform: translateY(30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .health-score::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--gradient-primary);
            animation: progressBar 3s ease infinite;
        }

        @keyframes progressBar {
            0% { width: 0%; }
            100% { width: 100%; }
        }

        .score-value {
            font-size: 56px;
            font-weight: 800;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 15px 0;
            animation: scoreAnimation 2s ease infinite;
            transition: all 0.5s ease;
        }

        @keyframes scoreAnimation {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .live-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 12px;
            color: var(--success-color);
            font-weight: 500;
            padding: 8px 16px;
            background: rgba(74, 222, 128, 0.1);
            border-radius: 20px;
            margin-top: 10px;
        }

        .live-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: var(--success-color);
            animation: livePulse 1s ease-in-out infinite;
        }

        @keyframes livePulse {
            0%, 100% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.7; }
        }

        /* Enhanced Chart Grid */
        .chart-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
            height: 300px;
        }

        .chart-container {
            background: var(--glass-bg);
            border-radius: 20px;
            padding: 25px;
            border: 1px solid var(--glass-border);
            backdrop-filter: blur(20px);
            display: flex;
            flex-direction: column;
            transition: all 0.3s ease;
            animation: fadeInUp 1s ease;
            animation-delay: 0.3s;
            animation-fill-mode: both;
        }

        .chart-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .full-width {
            grid-template-columns: 1fr;
            height: auto;
        }

        .full-width .chart-container {
            height: 320px;
            margin-bottom: 20px;
        }

        /* Enhanced Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: var(--glass-bg);
            border-radius: 20px;
            padding: 25px;
            border: 1px solid var(--glass-border);
            backdrop-filter: blur(20px);
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
            animation: fadeInUp 1s ease;
            animation-delay: 0.6s;
            animation-fill-mode: both;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: var(--gradient-primary);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .stat-card:hover::before {
            transform: scaleX(1);
        }

        .stat-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.4);
        }

        .stat-value {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
            transition: all 0.3s ease;
        }

        .stat-trend {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 13px;
            font-weight: 500;
            padding: 4px 8px;
            border-radius: 12px;
            width: fit-content;
        }

        .trend-up { 
            color: var(--success-color); 
            background: rgba(74, 222, 128, 0.1);
        }
        .trend-down { 
            color: var(--danger-color); 
            background: rgba(239, 68, 68, 0.1);
        }
        .trend-stable { 
            color: var(--warning-color); 
            background: rgba(251, 191, 36, 0.1);
        }

        .mini-chart {
            height: 50px;
            margin-top: 15px;
            opacity: 0.8;
            transition: opacity 0.3s ease;
        }

        .stat-card:hover .mini-chart {
            opacity: 1;
        }

        /* Real-time data updates with smooth transitions */
        .updating {
            animation: dataUpdate 0.5s ease;
        }

        @keyframes dataUpdate {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); color: var(--secondary-color); }
            100% { transform: scale(1); }
        }

        /* Enhanced responsive design */
        @media (max-width: 1200px) {
            .chart-grid {
                grid-template-columns: 1fr;
                height: auto;
            }
            
            .chart-container {
                height: 280px;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .header {
                flex-direction: column;
                gap: 15px;
                align-items: stretch;
            }

            .header-actions {
                justify-content: center;
            }

            .chart-grid {
                grid-template-columns: 1fr;
            }
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--card-bg);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--gradient-primary);
            border-radius: 4px;
        }

        /* Status indicators */
        .status-indicator {
            display: inline-block;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-left: 8px;
            animation: statusBlink 2s infinite;
        }

        .status-good {
            background: var(--success-color);
        }

        .status-warning {
            background: var(--warning-color);
        }

        .status-danger {
            background: var(--danger-color);
        }

        @keyframes statusBlink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0.3; }
        }
    </style>
</head>
<body>
    <!-- Dynamic background particles -->
    <div class="particles" id="particles"></div>

    <div class="container">
        <!-- Standardized Sidebar -->
        <aside class="sidebar">
            <%- include('partials/navigation', { currentPage: 'health-metrics' }) %>
        </aside>

        <!-- Mobile Menu Button -->
        <button class="mobile-menu-btn" id="mobileMenuBtn">
            <i class="fas fa-bars"></i>
        </button>

        <!-- Main Content -->
        <main class="main-content">
            <div class="header">
                <h1 class="page-title">Welcome back, <span id="welcomeNameDisplay">G.Manideep</span> !</h1>
                <div class="header-actions">
                    <button class="btn active" onclick="toggleLiveUpdates()">
                        <i class="fas fa-pause" id="liveIcon"></i>
                        <span id="liveText">Live Active</span>
                    </button>
                    <button class="btn" onclick="refreshData()">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                    <button class="btn" onclick="exportMetrics()">
                        <i class="fas fa-download"></i> Export
                    </button>
                </div>
            </div>

            <!-- Enhanced Health Score -->
            <div class="health-score">
                <h2>Overall Health Score</h2>
                <div class="score-value" id="healthScore">87</div>
                <div class="score-label">Excellent <span class="status-indicator status-good"></span></div>
                <div class="live-indicator">
                    <div class="live-dot"></div>
                    <span>Live Monitoring Active</span>
                </div>
            </div>

            <!-- Enhanced Chart Grid -->
            <div class="chart-grid">
                <div class="chart-container">
                    <div class="chart-header">
                        <h2 class="chart-title">Real-time Health Trends</h2>
                        <div class="chart-actions">
                            <button class="btn" onclick="changeTimeframe('hour')">Hour</button>
                            <button class="btn active" onclick="changeTimeframe('day')">Day</button>
                            <button class="btn" onclick="changeTimeframe('week')">Week</button>
                        </div>
                    </div>
                    <div class="chart-canvas">
                        <canvas id="trendsChart"></canvas>
                    </div>
                </div>

                <div class="chart-container">
                    <div class="chart-header">
                        <h2 class="chart-title">Live Health Composition</h2>
                    </div>
                    <div class="chart-canvas">
                        <canvas id="compositionChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Enhanced Detailed Charts -->
            <div class="chart-grid full-width">
                <div class="chart-container">
                    <div class="chart-header">
                        <h2 class="chart-title">Heart Rate Live Stream</h2>
                        <div class="live-indicator">
                            <div class="live-dot"></div>
                            <span>Real-time</span>
                        </div>
                    </div>
                    <div class="chart-canvas">
                        <canvas id="heartRateLiveChart"></canvas>
                    </div>
                </div>

                <div class="chart-container">
                    <div class="chart-header">
                        <h2 class="chart-title">Activity Monitor</h2>
                        <div class="live-indicator">
                            <div class="live-dot"></div>
                            <span>Live</span>
                        </div>
                    </div>
                    <div class="chart-canvas">
                        <canvas id="activityChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Enhanced Stats Grid -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Heart Rate</div>
                        <div class="stat-icon" style="background: rgba(78, 205, 196, 0.2); color: #4ecdc4;">
                            <i class="fas fa-heartbeat"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #4ecdc4;" id="heartRate">72</div>
                    <div class="stat-trend trend-up">
                        <i class="fas fa-arrow-up"></i>
                        <span>+2 bpm</span>
                    </div>
                    <canvas class="mini-chart" id="heartRateChart"></canvas>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Sleep Quality</div>
                        <div class="stat-icon" style="background: rgba(138, 43, 226, 0.2); color: #8a2be2;">
                            <i class="fas fa-moon"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #8a2be2;" id="sleepQuality">8.5</div>
                    <div class="stat-trend trend-up">
                        <i class="fas fa-arrow-up"></i>
                        <span>+0.3</span>
                    </div>
                    <canvas class="mini-chart" id="sleepChart"></canvas>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Stress Level</div>
                        <div class="stat-icon" style="background: rgba(255, 107, 107, 0.2); color: #ff6b6b;">
                            <i class="fas fa-brain"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #ff6b6b;" id="stressLevel">Low</div>
                    <div class="stat-trend trend-down">
                        <i class="fas fa-arrow-down"></i>
                        <span>-5%</span>
                    </div>
                    <canvas class="mini-chart" id="stressChart"></canvas>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Steps Today</div>
                        <div class="stat-icon" style="background: rgba(251, 191, 36, 0.2); color: #fbbf24;">
                            <i class="fas fa-walking"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #fbbf24;" id="stepsToday">8,547</div>
                    <div class="stat-trend trend-up">
                        <i class="fas fa-arrow-up"></i>
                        <span>+247</span>
                    </div>
                    <canvas class="mini-chart" id="stepsChart"></canvas>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Calories Burned</div>
                        <div class="stat-icon" style="background: rgba(245, 101, 101, 0.2); color: #f56565;">
                            <i class="fas fa-fire"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #f56565;" id="caloriesBurned">2,341</div>
                    <div class="stat-trend trend-up">
                        <i class="fas fa-arrow-up"></i>
                        <span>+67</span>
                    </div>
                    <canvas class="mini-chart" id="caloriesChart"></canvas>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-title">Recovery Score</div>
                        <div class="stat-icon" style="background: rgba(74, 222, 128, 0.2); color: #4ade80;">
                            <i class="fas fa-battery-three-quarters"></i>
                        </div>
                    </div>
                    <div class="stat-value" style="color: #4ade80;" id="recoveryScore">92%</div>
                    <div class="stat-trend trend-stable">
                        <i class="fas fa-minus"></i>
                        <span>Stable</span>
                    </div>
                    <canvas class="mini-chart" id="recoveryChart"></canvas>
                </div>
            </div>
        </main>
    </div>

    <script>
        let isLiveUpdating = true;
        let updateInterval;
        let fastUpdateInterval;
        let charts = {};
        let liveDataBuffers = {
            heartRate: [],
            steps: [],
            calories: [],
            stress: []
        };

        // Enhanced data generation with more realistic patterns
        function generateRealisticHeartRate() {
            const time = Date.now() / 1000;
            const base = 70;
            const variation = Math.sin(time / 10) * 5 + Math.random() * 8 - 4;
            return Math.max(55, Math.min(95, Math.round(base + variation)));
        }

        function generateRealisticSteps() {
            const currentSteps = parseInt(document.getElementById('stepsToday').textContent.replace(',', ''));
            const increment = Math.random() * 15 + 5;
            return Math.min(15000, currentSteps + Math.round(increment));
        }

        function generateRealisticCalories() {
            const currentCals = parseInt(document.getElementById('caloriesBurned').textContent.replace(',', ''));
            const increment = Math.random() * 8 + 2;
            return Math.min(4000, currentCals + Math.round(increment));
        }

        // Create dynamic background particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            
            setInterval(() => {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                const size = Math.random() * 60 + 20;
                particle.style.width = size + 'px';
                particle.style.height = size + 'px';
                particle.style.left = Math.random() * 100 + '%';
                
                particlesContainer.appendChild(particle);
                
                setTimeout(() => {
                    particle.remove();
                }, 20000);
            }, 3000);
        }

        // Enhanced live data updates with smooth animations
        function updateLiveData() {
            if (!isLiveUpdating) return;

            // Update health score with animation
            const healthScoreEl = document.getElementById('healthScore');
            const currentScore = parseInt(healthScoreEl.textContent);
            const newScore = Math.max(70, Math.min(100, currentScore + (Math.random() - 0.5) * 2));
            
            if (Math.abs(newScore - currentScore) > 0.5) {
                healthScoreEl.classList.add('updating');
                setTimeout(() => {
                    healthScoreEl.textContent = Math.round(newScore);
                    healthScoreEl.classList.remove('updating');
                }, 250);
            }

            // Update heart rate with realistic pattern
            const heartRateEl = document.getElementById('heartRate');
            const newHeartRate = generateRealisticHeartRate();
            heartRateEl.textContent = newHeartRate;
            liveDataBuffers.heartRate.push(newHeartRate);
            if (liveDataBuffers.heartRate.length > 50) liveDataBuffers.heartRate.shift();

            // Update steps with smooth increment
            const stepsEl = document.getElementById('stepsToday');
            const newSteps = generateRealisticSteps();
            stepsEl.textContent = newSteps.toLocaleString();
            liveDataBuffers.steps.push(newSteps);
            if (liveDataBuffers.steps.length > 50) liveDataBuffers.steps.shift();

            // Update calories burned
            const caloriesEl = document.getElementById('caloriesBurned');
            const newCalories = generateRealisticCalories();
            caloriesEl.textContent = newCalories.toLocaleString();
            liveDataBuffers.calories.push(newCalories);
            if (liveDataBuffers.calories.length > 50) liveDataBuffers.calories.shift();

            // Update charts with new data
            updateCharts();
        }

        // Initialize and update charts
        function initializeCharts() {
            const chartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                animation: {
                    duration: 0
                },
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        display: false
                    },
                    y: {
                        display: false
                    }
                }
            };

            // Initialize heart rate live chart
            charts.heartRate = new Chart(document.getElementById('heartRateLiveChart'), {
                type: 'line',
                data: {
                    labels: Array(50).fill(''),
                    datasets: [{
                        data: Array(50).fill(null),
                        borderColor: '#4ecdc4',
                        borderWidth: 2,
                        fill: true,
                        backgroundColor: 'rgba(78, 205, 196, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    ...chartOptions,
                    scales: {
                        y: {
                            display: true,
                            min: 50,
                            max: 100
                        }
                    }
                }
            });

            // Initialize activity chart
            charts.activity = new Chart(document.getElementById('activityChart'), {
                type: 'bar',
                data: {
                    labels: ['12am', '3am', '6am', '9am', '12pm', '3pm', '6pm', '9pm'],
                    datasets: [{
                        data: [20, 10, 5, 30, 45, 60, 40, 25],
                        backgroundColor: '#8a2be2'
                    }]
                },
                options: {
                    ...chartOptions,
                    scales: {
                        y: {
                            display: true,
                            beginAtZero: true
                        }
                    }
                }
            });

            // Initialize mini charts
            ['heartRate', 'sleep', 'stress', 'steps', 'calories', 'recovery'].forEach(metric => {
                const ctx = document.getElementById(`${metric}Chart`);
                if (!ctx) return;

                charts[metric] = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: Array(20).fill(''),
                        datasets: [{
                            data: Array(20).fill(null),
                            borderColor: getMetricColor(metric),
                            borderWidth: 1.5,
                            fill: true,
                            backgroundColor: `${getMetricColor(metric)}22`,
                            tension: 0.4
                        }]
                    },
                    options: chartOptions
                });
            });
        }

        function getMetricColor(metric) {
            const colors = {
                heartRate: '#4ecdc4',
                sleep: '#8a2be2',
                stress: '#ff6b6b',
                steps: '#fbbf24',
                calories: '#f56565',
                recovery: '#4ade80'
            };
            return colors[metric] || '#4ecdc4';
        }

        function updateCharts() {
            // Update heart rate live chart
            if (charts.heartRate && liveDataBuffers.heartRate.length) {
                charts.heartRate.data.datasets[0].data = [...liveDataBuffers.heartRate];
                charts.heartRate.update('none');
            }

            // Update mini charts with random variations
            Object.keys(charts).forEach(metric => {
                if (metric === 'activity') return;
                
                const chart = charts[metric];
                if (!chart) return;

                const currentData = chart.data.datasets[0].data;
                const lastValue = currentData[currentData.length - 1] || 50;
                const newValue = lastValue + (Math.random() - 0.5) * 10;
                
                currentData.push(newValue);
                currentData.shift();
                chart.update('none');
            });
        }

        function toggleLiveUpdates() {
            isLiveUpdating = !isLiveUpdating;
            const icon = document.getElementById('liveIcon');
            const text = document.getElementById('liveText');
            
            icon.className = isLiveUpdating ? 'fas fa-pause' : 'fas fa-play';
            text.textContent = isLiveUpdating ? 'Live Active' : 'Live Paused';
            
            if (isLiveUpdating) {
                startUpdates();
            } else {
                clearInterval(updateInterval);
                clearInterval(fastUpdateInterval);
            }
        }

        function startUpdates() {
            updateInterval = setInterval(updateLiveData, 2000);
            fastUpdateInterval = setInterval(() => {
                if (isLiveUpdating) {
                    const heartRateEl = document.getElementById('heartRate');
                    const currentRate = parseInt(heartRateEl.textContent);
                    const variation = Math.random() * 2 - 1;
                    heartRateEl.textContent = Math.round(currentRate + variation);
                }
            }, 200);
        }

        function refreshData() {
            updateLiveData();
        }

        function exportMetrics() {
            const data = {
                timestamp: new Date().toISOString(),
                healthScore: document.getElementById('healthScore').textContent,
                heartRate: document.getElementById('heartRate').textContent,
                sleepQuality: document.getElementById('sleepQuality').textContent,
                stressLevel: document.getElementById('stressLevel').textContent,
                steps: document.getElementById('stepsToday').textContent,
                caloriesBurned: document.getElementById('caloriesBurned').textContent,
                recoveryScore: document.getElementById('recoveryScore').textContent
            };

            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `health-metrics-${new Date().toISOString().split('T')[0]}.json`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }

        // Initialize everything when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            createParticles();
            initializeCharts();
            startUpdates();
        });

        // Mobile menu toggle
        document.getElementById('mobileMenuBtn').addEventListener('click', () => {
            document.getElementById('sidebar').classList.toggle('active');
        });

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', (e) => {
            const sidebar = document.getElementById('sidebar');
            const mobileMenuBtn = document.getElementById('mobileMenuBtn');
            
            if (!sidebar.contains(e.target) && !mobileMenuBtn.contains(e.target)) {
                sidebar.classList.remove('active');
            }
        });

        // Active link handling
        document.addEventListener('DOMContentLoaded', () => {
            const currentPage = window.location.pathname.split('/').pop() || 'Dashboard';
            const sidebarLinks = document.querySelectorAll('.sidebar-menu a');
            
            sidebarLinks.forEach(link => {
                if (link.getAttribute('href') === currentPage) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        });

        // Display user name from localStorage
        document.addEventListener('DOMContentLoaded', function() {
            const userName = localStorage.getItem('userName') || 'User';
            document.getElementById('userNameDisplay').textContent = userName;
            document.getElementById('welcomeNameDisplay').textContent = userName;
            
            // Update avatar initials
            const initials = userName.split(' ')
                .map(word => word[0])
                .join('')
                .toUpperCase()
                .substring(0, 2);
            document.getElementById('userAvatar').textContent = initials;
        });
    </script>
</body>
</html>